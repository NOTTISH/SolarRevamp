-- DONT USE THIS ITS FOR SOLAR UI DONT EDIT/MODIFY ANYTHING IN THIS CODE!!!
local Tabcooldown = false
--tab creation
function CreateTab(path1, path2, pos)
    --XUREL#7777 XUREL#7777--
    --DONT CHANGE ANYTHING UNLESS YOU WANT THE WHOLE UI TO BREAK--

    --variables
    local core = game:GetService("CoreGui") -- state coregui
    local solar = core:FindFirstChild("SolarHub") -- state solar
    local button = solar.Backdrop.Tabs.ScrollingFrame[path1] -- state path1 (button)
    local page = solar.Backdrop.Pages[path2]-- state path2 (page)
    local fader = solar.Backdrop.Pages.FadeManager -- the cheap way of fading pages

    local function FadeIn() -- fade in
        fader.BackgroundTransparency = 1
        fader.Visible = true
        game:GetService("TweenService"):Create(fader, TweenInfo.new(0.25), {BackgroundTransparency = 0}):Play()
        task.wait(0.25)
    end

    local function FadeOut() -- fade out
        fader.BackgroundTransparency = 0
        fader.Visible = true
        game:GetService("TweenService"):Create(fader, TweenInfo.new(0.25), {BackgroundTransparency = 1}):Play()
        task.wait(0.25)
    end


    --when mouse touches tab change text to blue
    button.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(button, TweenInfo.new(0.25), {TextColor3 = Color3.fromRGB(29, 187, 255)}):Play()
    end)

    --when left change back to normal color
    button.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(button, TweenInfo.new(0.25), {TextColor3 = Color3.fromRGB(231,231,231)}):Play()
    end)

    --when clicked change tabs
    button.MouseButton1Down:Connect(function()
        if Tabcooldown == false then
            Tabcooldown = true
            pcall(function()
                game:GetService("TweenService"):Create(solar.Backdrop.Tabs.Slider, TweenInfo.new(0.25), {Position = pos}):Play()
                FadeIn()
                for i, v in pairs(solar.Backdrop.Pages:GetChildren()) do
                    if v:IsA("Frame") then
                        v.Visible = false
                    end
                end
                fader.Visible = true
                page.Visible = true
                task.wait(0.25)
                FadeOut()
                Tabcooldown = false
            end)
        end
    end)
end
-- ex: CreateTab("MainButton", "MainPage", UDim2.new(0.014, 0,0.112, 0))

function CreateButton(parent, h, d, callback)
	local description = parent.Description
	local header = parent.Header
	local errored = false
	local selected = false
	local function firstToUpper(str)
		return (str:gsub("^%l", string.upper))
	end
	local wee = d:lower()
	local desc = firstToUpper(wee).."."
	local hea = h
	description.Text = desc
	header.Text = hea
	parent.MouseEnter:Connect(function()
		selected = true
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.25), {CornerRadius = UDim.new(0,8)}):Play()
		if errored == false then
			game:GetService("TweenService"):Create(parent, TweenInfo.new(0.25), {BackgroundColor3 = Color3.fromRGB(70,70,70)}):Play()
		end
	end)
	parent.MouseLeave:Connect(function()
		selected = false
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.25), {CornerRadius = UDim.new(0,4)}):Play()
		if errored == false then
			game:GetService("TweenService"):Create(parent, TweenInfo.new(0.25), {BackgroundColor3 = Color3.fromRGB(80,80,80)}):Play()
		end
	end)
	parent.MouseButton1Down:Connect(function()
		local succ, err = pcall(callback)
		if succ then
			local RippleEffect = parent.Ripple:Clone()
			RippleEffect.Parent = parent
			RippleEffect.Position = UDim2.new(0.5, 0,0.489, 0)
			RippleEffect.BackgroundTransparency = 0
			RippleEffect.Visible = true
			game:GetService("TweenService"):Create(RippleEffect, TweenInfo.new(0.35), {BackgroundTransparency = 1}):Play()
			game:GetService("TweenService"):Create(RippleEffect, TweenInfo.new(0.35), {Size = UDim2.new(0, 545,0, 545)}):Play()
			task.wait(0.35)
			RippleEffect:Destroy()
		else
			errored = true
			game:GetService("TweenService"):Create(parent, TweenInfo.new(0.25), {BackgroundColor3 = Color3.fromRGB(152, 0, 3)}):Play()
			game:GetService("TweenService"):Create(parent.Description, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
			game:GetService("TweenService"):Create(parent.Header, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
			task.wait(0.25)
			description.Text = "Error!"
	        	header.Text = "An unknown error occured!"
			game:GetService("TweenService"):Create(parent.Description, TweenInfo.new(0.25), {TextTransparency = 0}):Play()
			game:GetService("TweenService"):Create(parent.Header, TweenInfo.new(0.25), {TextTransparency = 0}):Play()
			task.wait(5.25)
			if selected == true then
				game:GetService("TweenService"):Create(parent, TweenInfo.new(0.25), {BackgroundColor3 = Color3.fromRGB(70,70,70)}):Play()
			else
				game:GetService("TweenService"):Create(parent, TweenInfo.new(0.25), {BackgroundColor3 = Color3.fromRGB(80,80,80)}):Play()
			end
			game:GetService("TweenService"):Create(parent.Description, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
			game:GetService("TweenService"):Create(parent.Header, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
			errored = false
			task.wait(0.25)
			description.Text = desc
			header.Text = hea
			game:GetService("TweenService"):Create(parent.Description, TweenInfo.new(0.25), {TextTransparency = 0}):Play()
			game:GetService("TweenService"):Create(parent.Header, TweenInfo.new(0.25), {TextTransparency = 0}):Play()
		end
	end)
end
